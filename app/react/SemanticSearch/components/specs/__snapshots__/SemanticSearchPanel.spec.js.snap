// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SemanticSearchPanel should render SearchList with searches from the state 1`] = `
<SidePanel
  className="metadata-sidepanel semantic-search"
  open={true}
>
  <button
    className="closeSidepanel close-modal"
    onClick={[Function]}
  >
    <Connect(Icon)
      icon="times"
    />
  </button>
  <div
    className="sidepanel-header"
  >
    <span
      className="sidepanel-title"
    >
      Semantic search
    </span>
    <LocalForm
      autoComplete="off"
      className="form-inline semantic-search-form"
      getDispatch={[Function]}
      initialState={Object {}}
      model="searchText"
      onSubmit={[Function]}
    >
      <div
        className="input-group"
      >
        <Modeled(Connect(Field))
          model=".searchTerm"
        >
          <input
            autoComplete="off"
            className="form-control"
            placeholder="Search"
            type="text"
          />
        </Modeled(Connect(Field))>
      </div>
      <button
        className="btn btn-default new-search"
        type="submit"
      >
        Start new search
      </button>
    </LocalForm>
  </div>
  <div
    className="sidepanel-body"
  >
    <ShowIf
      if={true}
    >
      <Connect(SearchList)
        searches={
          Array [
            Object {
              "searchTerm": "search1",
            },
            Object {
              "searchTerm": "search2",
            },
          ]
        }
      />
    </ShowIf>
  </div>
</SidePanel>
`;

exports[`SemanticSearchPanel should render new search form when search button is clicked 1`] = `
<SidePanel
  className="metadata-sidepanel semantic-search"
  open={true}
>
  <button
    className="closeSidepanel close-modal"
    onClick={[Function]}
  >
    <Connect(Icon)
      icon="times"
    />
  </button>
  <div
    className="sidepanel-header"
  >
    <span
      className="sidepanel-title"
    >
      Semantic search
    </span>
    <LocalForm
      autoComplete="off"
      className="form-inline semantic-search-form"
      getDispatch={[Function]}
      initialState={Object {}}
      model="searchText"
      onSubmit={[Function]}
    >
      <div
        className="input-group"
      >
        <Modeled(Connect(Field))
          model=".searchTerm"
        >
          <input
            autoComplete="off"
            className="form-control"
            placeholder="Search"
            type="text"
          />
        </Modeled(Connect(Field))>
      </div>
      <button
        className="btn btn-default new-search"
        type="submit"
      >
        Start new search
      </button>
    </LocalForm>
  </div>
  <div
    className="sidepanel-body"
  >
    <ShowIf
      if={true}
    >
      <Connect(SearchList)
        searches={Array []}
      />
    </ShowIf>
  </div>
</SidePanel>
`;
