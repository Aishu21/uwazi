// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Map Markdown component renderPopupInfo should have a correct function for rendering popus 1`] = `
<div>
  <Connect(TemplateLabel)
    template="t1"
  />
    
  title
</div>
`;

exports[`Map Markdown component renderPopupInfo should have a correct function for rendering popus 2`] = `
<div>
  <Connect(TemplateLabel)
    template="t2"
  />
    
  another title
</div>
`;

exports[`Map Markdown component should render a placeholder when data is undefined 1`] = `
<div
  className="Map "
>
  <Loader />
</div>
`;

exports[`Map Markdown component should render the data passed by mapStateToProps 1`] = `
<div
  className="Map custom-class"
>
  <Connect(Component)
    entities={
      Immutable.List [
        Immutable.Map {
          "template": "t1",
          "metadata": Immutable.Map {
            "geoProperty": Immutable.Map {
              "lat": 7,
              "lon": 13,
            },
          },
        },
        Immutable.Map {
          "template": "t1",
          "metadata": Immutable.Map {
            "geoProperty": Immutable.Map {
              "lat": 5,
              "lon": 22,
            },
          },
        },
        Immutable.Map {
          "template": "t3",
          "metadata": Immutable.Map {
            "notGeo": Immutable.Map {
              "lat": 1977,
              "lon": 7,
            },
          },
        },
        Immutable.Map {
          "template": "t2",
          "metadata": Immutable.Map {
            "anotherGeoProperty": Immutable.Map {
              "lat": 2018,
              "lon": 6,
            },
          },
        },
      ]
    }
  />
</div>
`;

exports[`Map Markdown component should render the data passed by mapStateToProps 2`] = `
<Map
  autoCenter={true}
  clickOnCluster={[Function]}
  clickOnMarker={[Function]}
  cluster={true}
  height={null}
  hoverOnMarker={[Function]}
  latitude={null}
  longitude={null}
  markers={
    Array [
      Object {
        "value": "markers",
      },
    ]
  }
  onClick={[Function]}
  renderMarker={null}
  renderPopupInfo={[Function]}
  width={null}
  zoom={1}
/>
`;
