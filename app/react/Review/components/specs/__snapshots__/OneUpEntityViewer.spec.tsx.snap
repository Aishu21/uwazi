// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EntityViewer should render 1`] = `
<div
  className="row flex"
>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
    title="Title"
  />
  <div
    className="content-holder"
  >
    <main
      className="content-main"
    >
      <div
        className="content-header content-header-entity"
      >
        <Connect(StateSelectorBase)
          isPristine={[Function]}
        >
          <Component />
        </Connect(StateSelectorBase)>
        <button
          className="btn btn-default btn-toggle-off"
          onClick={[Function]}
          type="button"
        >
          <Connect(Icon)
            icon="toggle-off"
          />
          <span
            className="btn-label"
          >
            Full edit mode
          </span>
        </button>
      </div>
      <div
        className="entity-viewer"
      >
        <Tabs
          selectedTab="info"
        >
          <TabContent
            for="info"
          >
            <div
              className="entity-metadata"
            >
              <ShowIf>
                <Connect(MetadataForm)
                  id="fullEditMetadataForm"
                  model="entityView.entityForm"
                  showSubset={
                    Array [
                      "title",
                    ]
                  }
                  templateId=""
                  version="OneUp"
                />
              </ShowIf>
              <ShowIf
                if={true}
              >
                <div>
                  <div
                    className="content-header-title"
                  >
                    <Connect(Icon)
                      className="item-icon item-icon-center"
                      size="sm"
                    />
                    <h1
                      className="item-name"
                    >
                      Title
                    </h1>
                    <Connect(TemplateLabel)
                      template=""
                    />
                    <Tip
                      icon="eye-slash"
                    >
                      This entity is not public.
                    </Tip>
                  </div>
                  <Connect(ShowMetadata)
                    entity={
                      Object {
                        "title": "Title",
                      }
                    }
                    relationships={Immutable.List []}
                    showSubset={Array []}
                    showTitle={false}
                    showType={false}
                  />
                  <Connect(AttachmentsList)
                    entityView={true}
                    files={Immutable.List []}
                    isDocumentAttachments={false}
                  />
                </div>
              </ShowIf>
            </div>
          </TabContent>
          <TabContent
            for="connections"
          >
            <Connect(withRouter(DocumentsList))
              deleteConnection={[Function]}
              hideFooter={true}
              searchCentered={true}
            />
          </TabContent>
        </Tabs>
      </div>
      <ShowIf
        if={false}
      >
        <div
          className="content-footer"
        >
          <Connect(RelationshipsFormButtons) />
        </div>
      </ShowIf>
      <ShowIf
        if={true}
      >
        <Connect(StateSelectorBase)
          isPristine={[Function]}
        >
          <Component />
        </Connect(StateSelectorBase)>
      </ShowIf>
      <Connect(ContextMenu)
        align="bottom"
        className="show-info-sidepanel-context-menu"
        overrideShow={true}
        show={false}
      >
        <ShowSidepanelMenu
          active={false}
          className="show-info-sidepanel-menu"
          openPanel={[Function]}
          panelIsOpen={true}
        />
      </Connect(ContextMenu)>
    </main>
    <SidePanel
      className="entity-connections entity-info"
      open={true}
    >
      <div
        className="sidepanel-header content-header-tabs"
      >
        <div
          className="blank"
        />
        <Tabs
          handleSelect={[Function]}
          selectedTab="info"
        >
          <ul
            className="nav nav-tabs"
          >
            <li>
              <TabLink
                to="info"
              >
                <Connect(Icon)
                  icon="info-circle"
                />
                <span
                  className="tab-link-tooltip"
                >
                  Info
                </span>
              </TabLink>
            </li>
            <li>
              <TabLink
                to="connections"
              >
                <Connect(Icon)
                  icon="exchange-alt"
                />
                <span
                  className="connectionsNumber"
                >
                  6
                </span>
                <span
                  className="tab-link-tooltip"
                >
                  Connections
                </span>
              </TabLink>
            </li>
          </ul>
        </Tabs>
        <button
          className="closeSidepanel close-modal"
          onClick={[Function]}
          type="button"
        >
          <Connect(Icon)
            icon="times"
          />
        </button>
      </div>
      <div
        className="sidepanel-body"
      >
        <Tabs
          selectedTab="info"
        >
          <TabContent
            for="none"
          >
            <Connect(ConnectionsGroups) />
          </TabContent>
          <TabContent
            for="info"
          >
            <Connect(MetadataForm)
              id="sidePanelMetadataForm"
              model="entityView.entityForm"
              showSubset={Array []}
              templateId=""
              version="OneUp"
            />
          </TabContent>
        </Tabs>
      </div>
      <ShowIf
        if={false}
      >
        <Connect(StateSelectorBase)
          isPristine={[Function]}
        >
          <Component />
        </Connect(StateSelectorBase)>
      </ShowIf>
    </SidePanel>
    <Connect(CreateConnectionPanel)
      className="entity-create-connection-panel"
      onCreate={[Function]}
    />
    <Connect(AddEntities) />
    <Connect(RelationshipMetadata) />
  </div>
  <Connect(Footer) />
</div>
`;
