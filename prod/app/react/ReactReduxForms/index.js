"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.LinkField = exports.Geolocation = exports.Switcher = exports.RadioButtons = exports.IconSelector = exports.DropdownList = exports.MultiDateRange = exports.MultiDate = exports.NumericRangeSlide = exports.NumericRange = exports.Numeric = exports.NestedMultiselect = exports.Nested = exports.MarkDown = exports.MultiSelect = exports.DateRange = exports.Captcha = exports.DatePicker = exports.FormGroup = exports.Select = void 0;var _react = _interopRequireDefault(require("react"));
var _reactReduxForm = require("react-redux-form");
var forms = _interopRequireWildcard(require("../Forms"));function _interopRequireWildcard(obj) {if (obj && obj.__esModule) {return obj;} else {var newObj = {};if (obj != null) {for (var key in obj) {if (Object.prototype.hasOwnProperty.call(obj, key)) {var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};if (desc.get || desc.set) {Object.defineProperty(newObj, key, desc);} else {newObj[key] = obj[key];}}}}newObj.default = obj;return newObj;}}function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _extends() {_extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};return _extends.apply(this, arguments);}

const Select = props => _react.default.createElement(_reactReduxForm.Control.select, _extends({ component: forms.Select }, props));exports.Select = Select;
const DatePicker = props => _react.default.createElement(_reactReduxForm.Control, _extends({ component: forms.DatePicker }, props));exports.DatePicker = DatePicker;
const Captcha = props => _react.default.createElement(_reactReduxForm.Control, _extends({ component: forms.Captcha }, props));exports.Captcha = Captcha;
const DateRange = props => _react.default.createElement(_reactReduxForm.Control.select, _extends({ component: forms.DateRange }, props));exports.DateRange = DateRange;
const MultiSelect = props => _react.default.createElement(_reactReduxForm.Control.select, _extends({ component: forms.MultiSelect }, props));exports.MultiSelect = MultiSelect;
const MarkDown = props => _react.default.createElement(_reactReduxForm.Control.text, _extends({ component: forms.MarkDown }, props));exports.MarkDown = MarkDown;
const Nested = props => _react.default.createElement(_reactReduxForm.Control.select, _extends({ component: forms.Nested }, props));exports.Nested = Nested;
const MultiDate = props => _react.default.createElement(_reactReduxForm.Control.select, _extends({ component: forms.MultiDate }, props));exports.MultiDate = MultiDate;
const MultiDateRange = props => _react.default.createElement(_reactReduxForm.Control.select, _extends({ component: forms.MultiDateRange }, props));exports.MultiDateRange = MultiDateRange;
const Numeric = props => _react.default.createElement(_reactReduxForm.Control, _extends({ component: forms.Numeric }, props));exports.Numeric = Numeric;
const NumericRange = props => _react.default.createElement(_reactReduxForm.Control.select, _extends({ component: forms.NumericRange }, props));exports.NumericRange = NumericRange;
const NumericRangeSlide = props => _react.default.createElement(_reactReduxForm.Control.select, _extends({ component: forms.NumericRangeSlide }, props));exports.NumericRangeSlide = NumericRangeSlide;
const DropdownList = props => _react.default.createElement(_reactReduxForm.Control.select, _extends({ component: forms.DropdownList }, props));exports.DropdownList = DropdownList;
const IconSelector = props => _react.default.createElement(_reactReduxForm.Control.select, _extends({ component: forms.IconSelector }, props));exports.IconSelector = IconSelector;
const RadioButtons = props => _react.default.createElement(_reactReduxForm.Control.select, _extends({ component: forms.RadioButtons }, props));exports.RadioButtons = RadioButtons;
const Switcher = props => _react.default.createElement(_reactReduxForm.Control.select, _extends({ component: forms.Switcher }, props));exports.Switcher = Switcher;
const Geolocation = props => _react.default.createElement(_reactReduxForm.Control, _extends({ component: forms.Geolocation }, props));exports.Geolocation = Geolocation;
const LinkField = props => _react.default.createElement(_reactReduxForm.Control, _extends({ component: forms.LinkField }, props));exports.LinkField = LinkField;
const NestedMultiselect = props => _react.default.createElement(forms.NestedMultiselect, props);exports.NestedMultiselect = NestedMultiselect;
const FormGroup = props => _react.default.createElement(forms.FormGroup, props);exports.FormGroup = FormGroup;